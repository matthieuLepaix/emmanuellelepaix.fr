{"version":3,"sources":["i18n.ts","colors.ts","components/shared/index.tsx","components/PageHeader/PageHeader.tsx","components/Pages/Contact/index.tsx","components/Pages/Home/index.tsx","components/Header/index.tsx","components/Footer/index.tsx","components/Pages/Events/index.tsx","components/Pages/Articles/index.tsx","components/App/App.tsx","serviceWorker.ts","components/Loader/index.tsx","index.tsx"],"names":["i18n","use","initReactI18next","init","fallbackLng","debug","lng","resources","en","header","headerEn","fr","headerFr","interpolation","escapeValue","lightGreen","darkGreen","Flex","styled","div","FlexVertical","FlexHorizontal","hr","MainBlock","Title","p","PageHeader","title","Content","Contact","t","useTranslation","pathname","useLocation","substring","Hero","HeroImage","img","HeroContent","HeroContentHeader","HeroLogo","HeroTitle","HeroText","HeroHeaderText","Home","src","Logo","Navigation","NavigationItem","NavigationLink","NavLink","NavigationButton","Header","language","data","map","nav","key","to","exact","activeClassName","onClick","e","preventDefault","changeLanguage","FooterDiv","Footer","href","Events","Articles","Main","App","path","Boolean","window","location","hostname","match","Loader","ReactDOM","render","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0657ee96.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport headerEn from './locales/en/header.json';\nimport headerFr from './locales/fr/header.json';\n\ni18n\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    lng: 'fr',\n    resources: {\n      en: {\n        header: headerEn,\n      },\n      fr: {\n        header: headerFr,\n      },\n    },\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n","export const green = '#8ed1a0';\nexport const lightGreen = 'rgb(233, 245, 217)';\nexport const darkGreen = 'rgb(73, 161, 145)';\n","import styled from 'styled-components';\nimport { darkGreen, lightGreen } from '../../colors';\n\nexport const Flex = styled.div`\n  display: flex;\n  font-family: Avenir LT Std, Segoe UI, Roboto, Helvetica Neue, Arial,\n    sans-serif;\n  line-height: 1.3rem;\n`;\n\nexport const FlexVertical = styled(Flex)`\n  flex-direction: column;\n`;\n\nexport const FlexHorizontal = styled(Flex)`\n  flex-direction: row;\n`;\n\nexport const Divider = styled.hr`\n  border-width: 0.5px;\n  border-color: ${darkGreen};\n  margin: 1px 0 0 0;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { darkGreen, lightGreen } from '../../colors';\nimport { FlexVertical } from '../shared';\n\nconst MainBlock = styled(FlexVertical)`\n  justify-content: center;\n  width: 100%;\n  height: 5rem;\n  background-color: ${darkGreen};\n`;\n\nconst Title = styled.p`\n  width: 70vw;\n  margin 0 auto;\n  font-size: 2rem;\n  color: ${lightGreen};\n`;\n\nconst _PageHeader = ({ title }: { title: string }) => {\n  return (\n    <MainBlock>\n      <Title>{title}</Title>\n    </MainBlock>\n  );\n};\n\nexport const PageHeader = _PageHeader;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { FlexVertical } from '../../shared';\nimport { PageHeader } from '../../PageHeader/PageHeader';\n\nconst MainBlock = styled(FlexVertical)`\n  width: 100%;\n`;\n\nconst Content = styled(FlexVertical)``;\n\nconst _Contact = () => {\n  const { t } = useTranslation('header');\n  const { pathname } = useLocation();\n\n  const title = t(`navs.${pathname.substring(1)}`);\n  return (\n    <MainBlock>\n      <PageHeader title={title}></PageHeader>\n      <Content></Content>\n    </MainBlock>\n  );\n};\n\nexport const Contact = _Contact;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Flex, FlexVertical, FlexHorizontal } from '../../shared';\nimport { darkGreen, lightGreen } from '../../../colors';\n\nconst MainBlock = styled(Flex)`\n  justify-content: center;\n  width: 70vw;\n  margin: 0 auto;\n`;\n\nconst Hero = styled(Flex)`\n  width: 100%;\n  max-height: 40vh;\n  border: 1px solid ${darkGreen};\n  margin-top: 2rem;\n  overflow: hidden;\n`;\n\nconst HeroImage = styled.img`\n  width: 25vw;\n  height: 100%;\n`;\n\nconst HeroContent = styled(FlexVertical)`\n  justify-content: space-between;\n  align-items: center;\n  margin: 0;\n`;\n\nconst HeroContentHeader = styled(FlexHorizontal)`\n  justify-content: space-between;\n  width: 100%;\n  background-color: ${darkGreen};\n  padding: 1rem 0;\n  align-items: center;\n`;\n\nconst HeroLogo = styled.img`\n  width: 7rem;\n  height: 7rem;\n  margin: 0;\n  margin-right: 2rem;\n  border: 1px solid ${darkGreen};\n  border-radius: 10rem;\n`;\n\nconst HeroTitle = styled.p`\n  margin: 0;\n  margin-bottom: 1rem;\n  margin-left: 2rem;\n  color: ${lightGreen};\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\n\nconst HeroText = styled.p`\n  height: 50%;\n  padding: 1rem;\n  color: ${darkGreen};\n`;\n\nconst HeroHeaderText = styled(HeroText)`\n  margin: 0;\n  margin-left: 2rem;\n  padding: 0;\n  margin-bottom: 0;\n  color: ${lightGreen};\n`;\n\nconst _Home = () => {\n  return (\n    <MainBlock>\n      <Hero>\n        <HeroImage src=\"https://images.unsplash.com/photo-1506126613408-eca07ce68773?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1331&q=80\"></HeroImage>\n        <HeroContent>\n          <HeroContentHeader>\n            <FlexVertical>\n              <HeroTitle>Emmanuelle Lepaix</HeroTitle>\n              <HeroHeaderText>\n                Coaching et formation en phytothérapie et aromathérapie\n              </HeroHeaderText>\n            </FlexVertical>\n            <HeroLogo src=\"https://scontent-bos3-1.cdninstagram.com/v/t51.2885-19/s320x320/83245258_180952913009048_5683823062256975872_n.jpg?_nc_ht=scontent-bos3-1.cdninstagram.com&_nc_ohc=mT8WTVASRoIAX-aXTUf&oh=723c6fe42ce8eaccbc300d1ba40e159c&oe=5F366D4C\"></HeroLogo>\n          </HeroContentHeader>\n          <HeroText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n          </HeroText>\n        </HeroContent>\n      </Hero>\n    </MainBlock>\n  );\n};\n\nexport const Home = _Home;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport * as data from '../../data/header.json';\nimport i18n from '../../i18n';\nimport { Flex } from '../shared';\nimport { green } from '../../colors';\n\n// import logo from '../../assets/images/logo.png';\nconst logo =\n  'https://scontent-bos3-1.cdninstagram.com/v/t51.2885-19/s320x320/83245258_180952913009048_5683823062256975872_n.jpg?_nc_ht=scontent-bos3-1.cdninstagram.com&_nc_ohc=mT8WTVASRoIAX-aXTUf&oh=723c6fe42ce8eaccbc300d1ba40e159c&oe=5F366D4C';\n\nconst Logo = styled.img`\n  display: flex;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 100rem;\n`;\n\nconst MainBlock = styled(Flex)`\n  justify-content: space-around;\n  align-items: center;\n  width: 70vw;\n  margin: 0 auto;\n`;\n\nconst Navigation = styled(Flex)`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  height: 5rem;\n`;\n\nconst NavigationItem = styled(Flex)`\n  justify-content: center;\n  width: 10rem;\n`;\n\nconst NavigationLink = styled(NavLink)`\n  color: black;\n  text-align: center;\n  text-decoration: none;\n  font-weight: 400;\n  padding-bottom: 2px;\n  &::after {\n    content: '';\n    display: block;\n    width: 0%;\n    height: 3px;\n    margin: 5px 0;\n    background-color: ${green};\n  }\n  &.active {\n    color: ${green};\n    font-weight: bold;\n  }\n  &.active::after {\n    width: 100%;\n    transition: width 0.3s linear;\n  }\n`;\n\nconst NavigationButton = styled(NavigationItem)`\n  self-align: flex-end;\n  color: black;\n  text-align: center;\n  cursor: pointer;\n  margin-top: -10px;\n`;\n\nconst _Header = () => {\n  const { t } = useTranslation('header');\n  const language = i18n.language;\n  return (\n    <>\n      <MainBlock>\n        <Logo src={logo} />\n        <Navigation>\n          {data.navs.map((nav) => {\n            return (\n              <NavigationItem key={nav.key}>\n                <NavigationLink to={nav.to} exact activeClassName=\"active\">\n                  {t(`navs.${nav.key}`)}\n                </NavigationLink>\n              </NavigationItem>\n            );\n          })}\n        </Navigation>\n        <NavigationButton\n          onClick={(e) => {\n            e.preventDefault();\n            if (language === 'en') {\n              i18n.changeLanguage('fr');\n            } else {\n              i18n.changeLanguage('en');\n            }\n          }}\n        >\n          {language === 'en' ? 'Français' : 'English'}\n        </NavigationButton>\n      </MainBlock>\n\n      {/* <Divider /> */}\n    </>\n  );\n};\n\nexport const Header = _Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Flex } from '../shared';\nimport { darkGreen, lightGreen } from '../../colors';\n\nconst FooterDiv = styled(Flex)`\n  justify-content: space-around;\n  align-items: center;\n  height: 5rem;\n  background-color: ${darkGreen};\n  color: ${lightGreen};\n\n  a {\n    color: ${lightGreen};\n    font-weight: bold;\n    text-decoration: none;\n  }\n`;\n\nconst _Footer = () => {\n  return (\n    <FooterDiv>\n      <p>© 2020 | All rights reserved, Emmanuelle Lepaix</p>\n      <p>\n        Designed by <a href=\"https://www.matthieulepaix.com\">Matthieu Lepaix</a>\n      </p>\n    </FooterDiv>\n  );\n};\n\nexport const Footer = _Footer;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nimport { FlexVertical } from '../../shared';\nimport { PageHeader } from '../../PageHeader/PageHeader';\n\nconst MainBlock = styled(FlexVertical)`\n  width: 100%;\n`;\n\nconst Content = styled(FlexVertical)``;\n\nconst _Events = () => {\n  const { t } = useTranslation('header');\n  const { pathname } = useLocation();\n\n  const title = t(`navs.${pathname.substring(1)}`);\n  return (\n    <MainBlock>\n      <PageHeader title={title}></PageHeader>\n      <Content></Content>\n    </MainBlock>\n  );\n};\n\nexport const Events = _Events;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { FlexVertical } from '../../shared';\nimport { PageHeader } from '../../PageHeader/PageHeader';\nimport { useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nconst MainBlock = styled(FlexVertical)`\n  width: 100%;\n`;\n\nconst Content = styled(FlexVertical)``;\n\nconst _Articles = () => {\n  const { t } = useTranslation('header');\n  const { pathname } = useLocation();\n\n  const title = t(`navs.${pathname.substring(1)}`);\n  return (\n    <MainBlock>\n      <PageHeader title={title}></PageHeader>\n      <Content></Content>\n    </MainBlock>\n  );\n};\n\nexport const Articles = _Articles;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Contact } from '../Pages/Contact';\nimport { Home } from '../Pages/Home';\nimport { Header } from '../Header';\nimport { Footer } from '../Footer';\nimport { Events } from '../Pages/Events';\nimport { Articles } from '../Pages/Articles';\nimport { Flex } from '../shared';\n\nconst Main = styled(Flex)`\n  min-height: calc(100vh - 10rem);\n`;\n\nexport function App() {\n  return (\n    <Router>\n      <Header />\n      <Main>\n        <Switch>\n          <Route exact path=\"/events\">\n            <Events />\n          </Route>\n          <Route exact path=\"/articles\">\n            <Articles />\n          </Route>\n          <Route exact path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Main>\n      <Footer />\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst _Loader = () => {\n  return <div>Loader</div>;\n};\n\nexport const Loader = _Loader;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport './index.scss';\nimport { App } from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Loader } from './components/Loader';\n\nReactDOM.render(\n  <Suspense fallback={<Loader />}>\n    <App />\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}